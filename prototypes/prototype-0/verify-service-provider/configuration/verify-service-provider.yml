# This is an example configuration file to show how to configure
# the application using a YAML file.

# Dropwizard server connector configuration
# see: http://www.dropwizard.io/1.1.2/docs/manual/configuration.html#servers
server:
  applicationConnectors:
    - type: http
      port: ${PORT:-50400}
  adminConnectors:
    - type: http
      port: 50401

# Logging configuration
# see: http://www.dropwizard.io/1.1.2/docs/manual/configuration.html#logging
logging:
  level: ${LOG_LEVEL:-INFO}
  loggers:
    "uk.gov": DEBUG
  appenders:
    - type: console
    - type: file
      currentLogFilename: logs/verify-service-provider.log
      archivedLogFilenamePattern: logs/verify-service-provider.log.%d.gz

# Location where Verify Hub authentication flow begins
hubSsoLocation: ${HUB_SSO_LOCATION:-http://localhost:50410/SAML2/SSO}

# Entity ID that uniquely identifies the hub
hubEntityId: ${HUB_ENTITY_ID:-https://signin.service.gov.uk}

# Entity that identifies the relying party's Matching Service Adapater
msaEntityId: ${MSA_ENTITY_ID:-default-msa-entity-id}

# Location of hub metadata
# Verify Service Provider consumes the metadata and
# Hub Public certificates from the metadata to identify the hub
hubMetadataUrl: ${HUB_METADATA_URL:-https://www.signin.service.gov.uk/SAML2/metadata/federation}

# Location of Matching Service Metadata
# Verify Service Provider consumes the metadata and uses
# public certificates from it to identify the msa
msaMetadataUrl: ${MSA_METADATA_URL:-default-msa-metadata-url}

# A random string value used as a key to generate tokens.
# Secure tokens are used to ensure that AuthnRequest and SAML response
# are coming from the same browser.
secureTokenKey: ${SECURE_TOKEN_KEY:-default-secure-token-key}

# Private key that is used to sign an AuthnRequest
samlSigningKey: ${SAML_SIGNING_KEY:-MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCjAOMXTW+oPkQEArBHUS28odqJiN2cDeVMiAfgeUs+r39q+iFALB/Jwy0z++UV9ZwizNDbzqbCAWaRYB+68QLn3vFrWeBjf2LI77XH7Zke4iG1se4mEYtBJlE+oRQgLXSNYAkFzH8BcnbGntCqFg7Z5DFhyYPHX8Ry1al9J9xWBG1nVAeFkGMcQPvRb3u0Co7RsXqnvE4NfJf5BwCl3tqaI+E1VuWQflVK3L84wDqbYY6XvuZWN36F/GcWpkz+gUwt/eHoMyLjKtJE5V8YRKg9uphYjuyxXQs+B12+riCVy/6CBi9nyeW0kWX92Ll+ZgpaXiikBlh96/kt346XNh3jAgMBAAECggEBAI1BYoo6D83Tj6uODObwoVr7Q9+13J20qQXGSFUtp5g+C4RQGGp9ElsNKWoIG0EJY/IAXeptzbMH9bN7gmPFIgh/+eRWsY5nwNpyaKxF6VCLFD1ZYRBaWbvuka9ddYxg98Tf+VGuIk3FvMporFkI3nvSNT0RnYI0KpB9OfB8j4N11q7rTeXGgUznpNvefEIwgUPW6AsRzexGIrdIx76CBmFEbjCOOl6Tk5DHdJlgUe0lXxrrvGskaJ0S7MqqgwxYWk5pgwHEU4+3aGcQ3JnFNOHWbEH5oT4LpW6I2AXO14OifGvzglw9RtcfKnBUKL2RcsAc1xbuI0ZlCZtAsvt7MXkCgYEAzYPhwzwYcDaSYxz/g9ccLBIuW1yJ/f0ttw9qdo5XjwlNUlQsWCKpM8x3H4+gNtaQ06ep1aGUJLc1FU6joq7REmMijGFSMX9ydMP6EFimhGzrB7XnVd4blTVtxRRBvGLvTA0ZAAU47b8j9AkcbJgdq8uu0ctXKfRVfKcHwOnnEVUCgYEAywuYeC6+5eeKFgXTM9DGeApZ362ZG8nqzjDLERRjQw8BssKVtRjGQChGU2JC8C+KV8vgwxb/yOLjmcmZqFZs6S35pCtvoSP8xaLPg+iEGwe4kkB2Li7L58Ad152q4h7rpN+V6X7wUUQUn/nxkiRY0hbNfVnymdtAJdzCzAWaUlcCgYBAwjzik040Fc4c8ydEuQTEkloPKeLFqQC9vVrTztiiVtEJj0KF5y4gB17GEDDw9r2eJCftDEQtKZnNhAEmIyX4QErDp2sJ89nyF0r12alm8xdAT758nUddxf836cEpBpfXBA2LpxmgOOmwXSqawXggCUemDggCTV6er9dOn6XTHQKBgAbGlUj1bmNnraD8gsbI4cahucwQE/rsawyEblJcls9nEcxwV+SaNgtwDKC9t7QiMgCqCg8YlmKSx7ubEaifcbT6VslWtbvv4oCJ5VjminoIcO1Yf1kdMKrEK3rFhS1UkNKIr40CMmzT08he4+PXmKsyHZtgRAtEWMiqrEl4qmSzAoGAJwbAZ8I231bqDSovqiE5KCo6nbJm9ok00d+x3mhMeQi8H6JZGrkEye0ncHS2KNP8dgK8e4/QWrx1srK+QK0RqCce9LHuL4n1Xuedo13XDG+w8sjx6gT2j/JryEwM2MaiPFYmVWIiO3R5MiHERgjCWktzcVxRXuatRHa5tqgk0+Q=}

# Private key used to decrypt Assertions in the Response
samlPrimaryEncryptionKey: ${SAML_PRIMARY_ENCRYPTION_KEY:-MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC9PVX022Exx/WOpq4TI+/EYsS5TFnM9ZrAYBnvYz9QPji9sujfWO/vrcYCB6ZbZa6ZPgLiBnWWySfoFS40Ph807M8SPvPJhkAwKy9BUVZzd7MaNLWN3YaCxnuo6HTVUloswK2hQR5TnZFjHPuv6COY0IHq11Amu0tGuI4E/YfDoqAVZ8lCDCzGwNJKxhyaJEDsGIn13SOlrth7JFTxYILWO3knSpeVmxB+xscVY5QLiSJyVrHzuWRKOqhtFbURGWF8me72sW1tJA1bdw866PDY8pGqhmK7a4x22o/BDQo0cm722yjM4timAZdY03wgxDvq3zAlciKsx2/PIao3H2I/AgMBAAECggEAbxmveU3CxkMq+1EIKdyTS6zg6hjVL+uRqxfAojaWWTnufhCnf1jrpL9U3KQ5GrebxgQOFTzNlHUMpMiqk6lVEPFmsMOcxNe4n47681IZezjvQZdob5169xQoTYYL8aGjp1qHlYBxmY2Maa/+Y8vZ+kGPxJwcRmD3VNHNL0jZiBTThLe7a07VhGrNbnilFa3nJMAxDj2RuHSZL4U6aYw4u4ecRlH211jvZ0wBboyZuzaC213smHArfKm7Bb1XZdWw+OcdgHnMRzwKu/xqdY5MmUgsFdPcwcg/Kqh83IDdIrq6M6a54VPmok/68GHumEgnAlxJiAo//03PLuvUZKwS4QKBgQDfv/WnVJL4VqnKwBj6MS4h1ET+5cMbfX7LoX1hIbWO1bt615BQrJFXexwYgBKyz970oM7Nia/vmSjrQcRxarlAtdyBArhDhao+8b/icnHIK62wTL9LWjBYlcRAGDh1BkutaW+dMWcryzMTgQnWZYqXQxPxHDmGG6nELUUztaQA9QKBgQDYg/+qMpoDr52NB23LyuhbRrmAsaGTwrFvvzwqCDR6pM//EgWBzGBObHoACB18gBZ1IakNtBJs3JM31i1GSkiplOQwqelFJmpv2m5zARhRo3hQ6zs+hJ8GgnoJeMfZr/mxP7N5B8pLD2e5M5mkfgxFYyJvNIYIDOmEXyxPOF7F4wKBgH4uhDvEb0nLnd9wa+WUnJ6JVgulyV0UbdAql0mSuBAAKsWBEardVu3NyK9scp8SqXqtwVKaZnSpnDDoGv+XHzgGF39N6Fpz4+mxbfQndFFdiIsXDP5Ss1cRxuYagqREU6NNBZvRg4xoALrsF38oLntVYcakkzA1I401toQN2JqNAoGAV37gLnNMcfjh/j/mStiwlVI7XJpr5T5kXfg14/Z03qsDstwhhZaFxKtpkeG1qL5KVQNJQdRnLb7lb0cJ/MHAI2eb316KeftQP+tRfwAOR897q5ej1Vvat9K6ZmF8waevi8VmTZ6sTTDohZsol6SoaNHq9G2RTGeLZobfbRQmmGkCgYEAm3LMzi2aSoDYcy4rlKwn2fgjkInBrFHSDEM5SK12BxDzK4QIKc767SnTtv01+4sFIopccJeFUb44Aci2YJRXB2eMSOM2El2yrSmaTi0HI02pPjvRlZZhbv+QUOkDOBp0Ivk+W5x1RbXvi8eWy36U2QZhkdQVjeiZZcd/QWO1tRs=}

# Secondary private key used to decrypt Assertions in the Response
# This only needs to be set if during key rotations (for example if your primary encryption certificate is about to expire)
samlSecondaryEncryptionKey: ${SAML_SECONDARY_ENCRYPTION_KEY}
